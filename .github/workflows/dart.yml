name: Convert SQL to CSV

on:
  workflow_dispatch: # Run manually or schedule separately
  # schedule:
  #   - cron: '0 12 1 * *' # Example schedule - adjust as needed


jobs:
  convert-sql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dartnumber  # Or the branch where you want to store the CSV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pandas and requests
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests

      - name: Download SQL and Convert to CSV
        run: |
          cat > convert_sql_to_csv.py << 'EOF'
          import requests
          import pandas as pd
          import csv

          def download_sql():
              url = "https://github.com/dannyhu926/phone_location/raw/refs/heads/master/mysql/phone_location.sql"
              response = requests.get(url)
              response.raise_for_status()
              return response.text

          def convert_to_csv(sql_content, csv_filepath):
              insert_statements = [line for line in sql_content.splitlines() if line.startswith("INSERT INTO `phone_location`")]
              data = []
              for statement in insert_statements:
                  values_str = statement[statement.find("VALUES") + len("VALUES"):].strip()
                  values = []
                  in_quote = False
                  current_value = ""
                  for char in values_str:
                      if char == "'":
                          in_quote = not in_quote
                      elif char == "," and not in_quote:
                          values.append(current_value.strip("'"))
                          current_value = ""
                      elif in_quote:
                          current_value += char
                  values.append(current_value.strip("'"))
                  data.append(values[1:5])  #Extract only pref, phone, province, city

              df = pd.DataFrame(data, columns=['pref', 'phone', 'province', 'city'])
              df.to_csv(csv_filepath, index=False, quoting=csv.QUOTE_NONNUMERIC) #  No "86" prepending here


          if __name__ == "__main__":
              sql_content = download_sql()
              convert_to_csv(sql_content, 'phone_location.csv')

          EOF
          python convert_sql_to_csv.py

      - name: Commit CSV to Repository
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add phone_location.csv
          git commit -m "Update phone location CSV"
          git push origin dartnumber  # Push to your branch
