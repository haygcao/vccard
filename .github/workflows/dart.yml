import re
import requests
from pypinyin import lazy_pinyin, Style
import os

def download_sql_file():
    url = "https://github.com/dannyhu926/phone_location/raw/refs/heads/master/mysql/phone_location.sql"
    response = requests.get(url)
    response.raise_for_status()
    return response.text

def convert_to_pinyin(province, city):
    p = ''.join(lazy_pinyin(province, style=Style.NORMAL))
    c = ''.join(lazy_pinyin(city, style=Style.NORMAL))
    return f"{c.title()}, {p.title()}"

def process_sql_data(sql_content):
    zh_map = {}
    en_map = {}

    # Robust regex to handle escaped quotes and other variations (Corrected)
    pattern = r"INSERT INTO `phone_location` VALUES\s*\(\d+,\s*'([^']*)',\s*'([^']*)',\s*'([^']*)',\s*'([^']*)'.*?\);"
    matches = re.finditer(pattern, sql_content, re.MULTILINE | re.DOTALL)  # Added flags

    for match in matches:
        pref, phone, province, city = match.groups()
        if pref and phone and province and city:
            try:
                phone_key = int("86" + pref)
            except ValueError:
                print(f"Skipping invalid phone prefix: {pref}")
                continue

            zh_map[phone_key] = f"{province}{city}"
            en_map[phone_key] = convert_to_pinyin(province, city)

    print(f"Processed {len(zh_map)} records")
    return zh_map, en_map

def generate_dart_files(zh_map, en_map):
    os.makedirs('lib', exist_ok=True)

    with open('lib/phone_location_zh.dart', 'w', encoding='utf-8') as f:
        f.write('// Generated by GitHub Actions\n')
        f.write('// Source: https://github.com/dannyhu926/phone_location\n\n')
        f.write('const Map<int, String> phoneLocationZh = {\n')
        for phone, location in zh_map.items():
            f.write(f'  {phone}: "{location}",\n')
        f.write('};\n')

    with open('lib/phone_location_en.dart', 'w', encoding='utf-8') as f:
        f.write('// Generated by GitHub Actions\n')
        f.write('// Source: https://github.com/dannyhu926/phone_location\n\n')
        f.write('const Map<int, String> phoneLocationEn = {\n')
        for phone, location in en_map.items():
            f.write(f'  {phone}: "{location}",\n')
        f.write('};\n')

if __name__ == '__main__':
    try:
        sql_content = download_sql_file()
        zh_map, en_map = process_sql_data(sql_content)
        generate_dart_files(zh_map, en_map)
        print("Processing completed successfully!")
    except Exception as e:
        print(f"Error occurred: {e}")
        raise
