name: Generate Dart Phone Location Maps

on:
  schedule:
    - cron: '0 12 15 * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dartnumber

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pypinyin

      - name: Download and Process SQL data
        run: |
          cat > process_data.py << 'EOF'
          import csv
          import requests
          from pypinyin import lazy_pinyin, Style
          import os
          import io

          def download_sql_file():
              url = "https://github.com/dannyhu926/phone_location/raw/refs/heads/master/mysql/phone_location.sql"
              response = requests.get(url)
              response.raise_for_status()
              return response.text

          def convert_to_pinyin(province, city):
              p = ''.join(lazy_pinyin(province, style=Style.NORMAL))
              c = ''.join(lazy_pinyin(city, style=Style.NORMAL))
              return f"{c.title()}, {p.title()}"

          def process_sql_data(sql_content):
              zh_map = {}
              en_map = {}

              with io.StringIO(sql_content) as sql_io:
                  reader = csv.DictReader(
                      (line for line in sql_io if line.startswith("INSERT")),
                      delimiter=',',
                      quotechar="'",
                      quoting=csv.QUOTE_ALL,
                      fieldnames=['id', 'pref', 'phone', 'province', 'city', 'isp', 'isp_type', 'post_code', 'city_code', 'area_code', 'create_time']
                  )

                  for row in reader:
                      phone = row.get('phone', '').strip()
                      province = row.get('province', '').strip()
                      city = row.get('city', '').strip()

                      if phone and province and city:
                          try:
                              phone_key = int("86" + phone)
                          except ValueError as e:
                              print(f"Skipping record due to invalid phone: {phone}, error: {e}")
                              continue
                          zh_map[phone_key] = f"{province}{city}"
                          en_map[phone_key] = convert_to_pinyin(province, city)

              print(f"Processed {len(zh_map)} records")
              return zh_map, en_map

          def generate_dart_files(zh_map, en_map):
              os.makedirs('lib', exist_ok=True)

              with open('lib/phone_location_zh.dart', 'w', encoding='utf-8') as f:
                  f.write('// Generated by GitHub Actions\n')
                  f.write('// Source: https://github.com/dannyhu926/phone_location\n\n')
                  f.write('const Map<int, String> phoneLocationZh = {\n')
                  for phone, location in zh_map.items():
                      f.write(f'  {phone}: "{location}",\n')
                  f.write('};\n')

              with open('lib/phone_location_en.dart', 'w', encoding='utf-8') as f:
                  f.write('// Generated by GitHub Actions\n')
                  f.write('// Source: https://github.com/dannyhu926/phone_location\n\n')
                  f.write('const Map<int, String> phoneLocationEn = {\n')
                  for phone, location in en_map.items():
                      f.write(f'  {phone}: "{location}",\n')
                  f.write('};\n')


          if __name__ == '__main__':
              try:
                  sql_content = download_sql_file()
                  zh_map, en_map = process_sql_data(sql_content)
                  generate_dart_files(zh_map, en_map)
                  print("Processing completed successfully!")
              except Exception as e:
                  print(f"Error occurred: {e}")
                  raise
          EOF

          python process_data.py

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add lib/phone_location_*.dart
          git commit -m "Update Dart phone location maps"
          git push origin dartnumber
