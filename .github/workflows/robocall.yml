name: US FTC Robocall Daily Data Processing

on:
  schedule:
    # 每天 UTC 15:00 运行
    # 转换为美国东部时间:
    # - EDT (夏令时): 11:00 AM EDT
    # - EST (标准时间): 10:00 AM EST
    - cron: '0 15 * * *'
  workflow_dispatch:

jobs:
  process_data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 确保有写入权限
    steps:
      - uses: actions/checkout@v4
        with:
          ref: us # 检出 us 分支
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pandas and phonenumbers
        run: pip install pandas phonenumbers

      - name: Download FTC data # 这里还是需要加入之前讨论的 User-Agent 和 Referer 头，否则可能继续 403 报错
        run: |
          year=$(date -d "yesterday" +%Y)
          month=$(date -d "yesterday" +%m)
          day=$(date -d "yesterday" +%d)
          
          FTC_URL="https://www.ftc.gov/sites/default/files/DNC_Complaint_Numbers_${year}-${month}-${day}.csv"
          USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36" # 示例，请用你实际测试过的
          REFERER_URL="https://www.ftc.gov/news-events/data-visualizations/do-not-call-complaint-data" # 示例，请用你实际测试过的
          
          echo "Attempting to download from: $FTC_URL"
          wget --content-disposition \
               --user-agent="$USER_AGENT" \
               --referer="$REFERER_URL" \
               -O ftc_data.csv "$FTC_URL"

      - name: Process FTC data
        run: |
          python <<EOF
          import pandas as pd
          import re
          import phonenumbers

          try:
              df = pd.read_csv('ftc_data.csv', encoding='utf-8', on_bad_lines='skip')
          except pd.errors.EmptyDataError:
              print("Error: CSV file is empty. Exiting.")
              exit(1)
          except pd.errors.ParserError as e:
              print(f"Error parsing CSV: {e}")
              exit(1)
          
          df = df[['Company_Phone_Number']]
          df = df.rename(columns={'Company_Phone_Number': 'phoneNumber'})

          df['phoneNumber'] = df['phoneNumber'].astype(str).apply(lambda x: re.sub(r"\.0$", "", x))
          df['phoneNumber'] = df['phoneNumber'].str.replace('.', '', regex=False)
          df['phoneNumber'] = df['phoneNumber'].str.strip()

          def format_phone_number(number):
              try:
                  if number.startswith("+"):
                      parsed_number = phonenumbers.parse(number, None)
                      if phonenumbers.is_valid_number(parsed_number):
                          return phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.E164)
                  else:
                      parsed_number = phonenumbers.parse(number, "US")
                      if phonenumbers.is_valid_number(parsed_number):
                          return phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.NATIONAL)
              except phonenumbers.phonenumberutil.NumberParseException:
                  pass
              return number

          df['phoneNumber'] = df['phoneNumber'].apply(format_phone_number)
          df = df[df['phoneNumber'].notna() & (df['phoneNumber'] != '')]

          df['label'] = 'Robocall'
          df['name'] = ''
          df['avatar'] = ''
          df['isSubscribed'] = 1
          df['count'] = ''
          df['url'] = ''
          df = df[['phoneNumber', 'label', 'name', 'avatar', 'isSubscribed', 'count', 'url']]
          df.to_csv('processed_ftc_data.csv', index=False)
          EOF

      - name: Commit and Push CSV
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update processed FTC data"
          file_pattern: "processed_ftc_data.csv"
          branch: us
          repository: . # 保持为 . 表示当前仓库
          token: ${{ secrets.GITHUB_TOKEN }} # <-- 这里是关键的修改！
