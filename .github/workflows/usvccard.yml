name: US FCC database Daily Data Processing

on:
  schedule:
    - cron: '0 3 * * 3'
  workflow_dispatch:

jobs:
  process_data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: us
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pandas and phonenumbers
        run: pip install pandas phonenumbers

      - name: Download and Process Data
        run: |
          wget --content-disposition -O data.csv https://fccprod.servicenowservices.com/api/x_g_fmc_rmd/rmd/csv_download

          python <<EOF
          import pandas as pd
          import re
          import phonenumbers
          import csv  # 导入 csv 模块

          # 读取 CSV 文件
          df = pd.read_csv('data.csv')

          # 选择需要的列并重命名
          df = df[['business_name', 'contact_telephone_number']]
          df = df.rename(columns={'business_name': 'name', 'contact_telephone_number': 'phoneNumber'})

          # 清理 phoneNumber 列
          df['phoneNumber'] = df['phoneNumber'].astype(str).apply(lambda x: re.sub(r"^'+", "", x))  # 移除开头的单引号
          df['phoneNumber'] = df['phoneNumber'].str.replace('.', '', regex=False)  # 移除点号
          df['phoneNumber'] = df['phoneNumber'].str.strip()  # 移除首尾空格

          # 格式化电话号码
          def format_phone_number(number):
              try:
                  if number.startswith("+"):
                      parsed_number = phonenumbers.parse(number, None)
                      if phonenumbers.is_valid_number(parsed_number):
                          return phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.E164)
                  else:
                      parsed_number = phonenumbers.parse(number, "US")
                      if phonenumbers.is_valid_number(parsed_number):
                          return phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumberFormat.NATIONAL)
              except phonenumbers.phonenumberutil.NumberParseException:
                  pass
              return number

          df['phoneNumber'] = df['phoneNumber'].apply(format_phone_number)

          # 过滤掉格式化后为空或无效的电话号码
          df = df[df['phoneNumber'].notna() & (df['phoneNumber'] != '')]

          # 添加额外的列
          df['label'] = 'Telemarketing'
          df['avatar'] = ''
          df['isSubscribed'] = 1
          df['count'] = ''
          df['url'] = ''
          df = df[['phoneNumber', 'label', 'name', 'avatar', 'isSubscribed', 'count', 'url']]

          # 使用 csv.writer 写入标准 CSV
          with open('processed_data.csv', 'w', encoding='utf-8', newline='') as f:
              writer = csv.writer(f, quoting=csv.QUOTE_ALL)
              writer.writerow(df.columns)  # 写入列名
              for index, row in df.iterrows():
                  writer.writerow(row.tolist())  # 写入每一行数据
          EOF

      - name: Commit and Push CSV
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update processed FCC data"
          file_pattern: "processed_data.csv"
          branch: us
          repository: .
          token: ${{ secrets.YOUR_GITHUB_TOKEN }}

      - name: Post-process Data
        run: |
          python <<EOF
          import pandas as pd
          import csv  # 导入 csv 模块

          # 读取处理后的 CSV 文件
          df = pd.read_csv('processed_data.csv')

          # 移除 ""
          df = df.replace('""', '', regex=False)

          # 移除 phoneNumber 为空或 NaN 的行
          df = df[df['phoneNumber'].notna() & (df['phoneNumber'] != '')]

          # 移除重复的 phoneNumber，保留最后一个出现的
          df = df.groupby('phoneNumber').last().reset_index()

          # 使用 csv.writer 写入标准 CSV
          with open('FCC_data.csv', 'w', encoding='utf-8', newline='') as f:
              writer = csv.writer(f, quoting=csv.QUOTE_ALL)
              writer.writerow(df.columns)  # 写入列名
              for index, row in df.iterrows():
                  writer.writerow(row.tolist())  # 写入每一行数据
          EOF

      - name: Commit and Push CSV
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update FCC number data"
          file_pattern: "FCC_data.csv"
          branch: us
          repository: .
          token: ${{ secrets.YOUR_GITHUB_TOKEN }}
